---

- name: Download Nextcloud version {{ nextcloud_version }}
  get_url:
    url: 'https://download.nextcloud.com/server/releases/nextcloud-{{ nextcloud_version }}.zip'
    dest: '/tmp/nextcloud.zip'

- name: Test if requested version is already installed
  lineinfile:
    path: "{{ nextcloud_install_dir }}/version.php"
    line: "$OC_VersionString = '19.0.0';"
    state: present
  # only check if line would be added (when not present yet)
  check_mode: true
  # ingore errors, like when file doesn't exist yet
  ignore_errors: true
  register: has_version

- name: Set variable to determine if update/install needed
  set_fact:
    nextcloud_needs_install: "{{ has_version.changed|bool }}"

- name: Output if install needed
  debug:
    var: nextcloud_needs_install

- name: Unzip Nextcloud package (contains nextcloud dir)
  unarchive:
    src: /tmp/nextcloud.zip
    dest: /tmp/
    remote_src: true
  when: nextcloud_needs_install

- name: Make sure Nextcloud install dir exists
  file:
    path: '{{ nextcloud_install_dir }}'
    state: directory
    owner: www-data
    group: www-data
  when: nextcloud_needs_install

- name: Move unzipped nextloud dir to install dir
  copy:
    src: /tmp/nextcloud
    dest: '{{ nextcloud_install_dir }}'
    remote_src: true
    owner: www-data
    group: www-data
  when: nextcloud_needs_install

- name: Cleanup install files
  file:
    path: /tmp/nextcloud.zip
    state: absent
- file:
    path: /tmp/nextcloud
    state: absent

- name: Copy config.php into place for initial setup
  template:
    src: nextcloud-config.php.j2
    dest: '{{ nextcloud_install_dir }}/config/config.php'

- name: Setup Nextcloud Data dir (for storing uploaded files) with Ngxinx permissions
  file:
    path: '{{ nextcloud_data_dir }}'
    state: directory
    owner: www-data
    group: www-data
